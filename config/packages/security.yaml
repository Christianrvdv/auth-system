security:
    role_hierarchy:
        ROLE_ADMIN: [ROLE_MANAGER, ROLE_INVENTORY_MANAGER, ROLE_USER]
        ROLE_MANAGER: [ROLE_INVENTORY_MANAGER, ROLE_USER]
        ROLE_INVENTORY_MANAGER: [ROLE_USER]
        ROLE_USER: []

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto
            cost: 12

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        # Firewall para desarrollo
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Firewall para la autenticaci√≥n de API (login con JSON)
        login:
            pattern: ^/api/auth/login
            stateless: true
            json_login:
                check_path: /api/auth/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # Firewall para la API (protegido por JWT)
        api:
            pattern: ^/api
            stateless: true
            jwt: ~
            entry_point: jwt

        # Firewall principal para la parte web
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                username_parameter: _username
                password_parameter: _password
            logout:
                path: app_logout
                target: app_home

    access_control:
        - { path: ^/api/auth/(login|register|health|web/register), roles: PUBLIC_ACCESS }
        - { path: ^/api/admin, roles: ROLE_ADMIN }
        - { path: ^/api/manager, roles: ROLE_MANAGER }
        - { path: ^/api/inventory, roles: ROLE_INVENTORY_MANAGER }
        - { path: ^/api, roles: ROLE_USER }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/register, roles: PUBLIC_ACCESS }
        - { path: ^/, roles: PUBLIC_ACCESS }
